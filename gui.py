# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'album_artwork_finder_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from cgitb import text
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        # Main Window
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(606, 372)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Progress Bar
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(67, 290, 491, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")

        # File Explorer
        self.file_explorer_button = QtWidgets.QPushButton(self.centralwidget)
        self.file_explorer_button.setGeometry(QtCore.QRect(160, 170, 261, 41))
        self.file_explorer_button.setObjectName("file_explorer_button")

        # Text Browser
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(40, 10, 531, 141))
        self.textBrowser.setObjectName("textBrowser")

        # Run Program
        self.run_program_button = QtWidgets.QPushButton(self.centralwidget)
        self.run_program_button.setGeometry(QtCore.QRect(210, 230, 171, 41))
        self.run_program_button.setAutoFillBackground(False)
        self.run_program_button.setObjectName("run_program_button")

        MainWindow.setCentralWidget(self.centralwidget)

        # Main Menu Bar (seen at the very top of the screen)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 606, 22))
        self.menubar.setObjectName("menubar")

        # File Option
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")

        # Edit Option
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")

        # About Option
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")

        MainWindow.setMenuBar(self.menubar)

        # Status Bar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)

        # File > New Option
        self.actionNew_2 = QtWidgets.QAction(MainWindow)
        self.actionNew_2.setObjectName("actionNew_2")

        # File > Save Option
        self.actionSave_2 = QtWidgets.QAction(MainWindow)
        self.actionSave_2.setObjectName("actionSave_2")

        # Edit > Cut Option
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")

        # Edit > Copy Option
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")

        # Edit > Paste Option
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")

        # About Option
        self.actionAbout_this_Tool = QtWidgets.QAction(MainWindow)
        self.actionAbout_this_Tool.setObjectName("actionAbout_this_Tool")

        # Adds all the options to the menu
        self.menuFile.addAction(self.actionNew_2)
        self.menuFile.addAction(self.actionSave_2)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuAbout.addAction(self.actionAbout_this_Tool)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # This dictates what occurs when each button is clicked
        self.actionNew_2.triggered.connect(
            lambda: self.clicked("New was clicked!"))
        self.actionSave_2.triggered.connect(
            lambda: self.clicked("Save was clicked!"))
        self.actionCut.triggered.connect(
            lambda: self.clicked("Cut was clicked!"))
        self.actionCopy.triggered.connect(
            lambda: self.clicked("Copy was clicked!"))
        self.actionPaste.triggered.connect(
            lambda: self.clicked("Paste was clicked!"))
        self.actionAbout_this_Tool.triggered.connect(
            lambda: self.clicked("About this Tool was clicked!"))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.file_explorer_button.setText(_translate(
            "MainWindow", "What is the link to your music library?"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Welcome to Matt\'s Album Artwork Grabber!</span></p>\n"
                                            "<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Thank you for checking out this tool.</p>\n"
                                            "<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Hopefully it helps you automatically get album artwork for your music files.</p>\n"
                                            "<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Note:  Can only get artwork for MP3 and M4A/MP4 files for now.</p></body></html>"))
        self.run_program_button.setText(
            _translate("MainWindow", "Find Album Artwork"))

        # Menu Options
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))

        # New
        self.actionNew_2.setText(_translate("MainWindow", "New"))
        self.actionNew_2.setStatusTip(_translate(
            "MainWindow", "Create a New File"))
        self.actionNew_2.setShortcut(_translate("MainWindow", "Ctrl+N"))
        # self.actionNew_2.setText(_translate("MainWindow", "New"))

        # Save
        self.actionSave_2.setText(_translate("MainWindow", "Save"))
        self.actionSave_2.setStatusTip(_translate("MainWindow", "Save a File"))
        self.actionSave_2.setShortcut(_translate("MainWindow", "Ctrl+S"))
        # self.actionSave.setText(_translate("MainWindow", "Save"))

        # Cut
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setStatusTip(_translate("MainWindow", "Cut a file"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))

        # Copy
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setStatusTip(_translate("MainWindow", "Copy a File"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))

        # Paste
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setStatusTip(_translate("MainWindow", "Paste a File"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))

        # About
        self.actionAbout_this_Tool.setText(
            _translate("MainWindow", "About this Tool"))
        self.actionAbout_this_Tool.setStatusTip(
            _translate("MainWindow", "About this Tool"))
        self.actionAbout_this_Tool.setShortcut(
            _translate("MainWindow", "Ctrl+?"))

    # Helper function used above when buttons are clicked
    def clicked(self, text):
        self.run_program_button.setText(text)
        self.run_program_button.adjustSize()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
